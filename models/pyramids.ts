import { walk, turnVertical, start, turnHorizontal } from '../src/turtle'

const drawTetrahedron = () => {
  const alpha = Math.acos(1 / Math.sqrt(3)) * 360 / (2 * Math.PI)

  turnHorizontal(60)
  turnVertical(-alpha)
  walk(50)
  turnVertical(alpha)
  turnHorizontal(150)
  walk(50)
  turnHorizontal(120)
  walk(50)
  turnHorizontal(120)
  walk(50)
  turnHorizontal(150)
  turnVertical(alpha)
  walk(50)
  turnVertical(-alpha)
  turnVertical(-alpha)
  turnHorizontal(60)
  walk(50)
  turnVertical(alpha)
  turnHorizontal(150)
  walk(50)
  turnHorizontal(120)
  walk(50)
  turnHorizontal(150)
  turnVertical(alpha)
  walk(50)
  turnVertical(-alpha)
}

const drawPyramid = () => {
  drawTetrahedron()
  start()
}

const drawRecursivePyramid = (recursionDepth : number, lineLength = 50) => {
  const alpha = Math.acos(1 / Math.sqrt(3)) * 360 / (2 * Math.PI)

  if (recursionDepth > 0) {
    drawRecursivePyramid(recursionDepth - 1, lineLength / 2)
    turnHorizontal(60)
    turnVertical(-alpha)
    walk(50)
    turnVertical(alpha)
    drawRecursivePyramid(recursionDepth - 1, lineLength / 2)
    turnHorizontal(210)
    walk(50)
    turnHorizontal(-30)
    drawRecursivePyramid(recursionDepth - 1, lineLength / 2)
    turnHorizontal(-150)
    walk(50)
    turnHorizontal(-30)
    drawRecursivePyramid(recursionDepth - 1, lineLength / 2)
    turnHorizontal(-150)
    walk(50)
    turnHorizontal(150)
    turnVertical(alpha)
    walk(50)
    turnVertical(-alpha)
    turnVertical(-alpha)
    turnHorizontal(60)
    walk(50)
    turnVertical(alpha)
    turnHorizontal(150)
    walk(50)
    turnHorizontal(120)
    walk(50)
    turnHorizontal(150)
    turnVertical(alpha)
    walk(50)
    turnVertical(-alpha)
  } else {
    turnVertical(-alpha)
    walk(50)
    turnVertical(alpha)
    turnHorizontal(150)
    walk(50)
    turnHorizontal(120)
    walk(50)
    turnHorizontal(120)
    walk(50)
    turnHorizontal(150)
    turnVertical(alpha)
    walk(50)
    turnVertical(-alpha)
    turnVertical(-alpha)
    turnHorizontal(60)
    walk(50)
    turnVertical(alpha)
    turnHorizontal(150)
    walk(50)
    turnHorizontal(120)
    walk(50)
    turnHorizontal(150)
    turnVertical(alpha)
    walk(50)
    turnVertical(-alpha)
  }
}

 export { drawPyramid, drawRecursivePyramid }
